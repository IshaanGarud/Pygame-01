# Before Installing , Open CMD (make sure you have pip installed) and type "pip install pygame"

import pygame, sys, random
from pygame.locals import *
from pygame import mixer


# WIDTH = 600  # 1920
# HEIGHT = 600  # 1080
# screen_size = (WIDTH, HEIGHT)
# screen = pygame.display.set_mode(
#     (WIDTH, HEIGHT))  # adding ~pygame.RESIZABLE~ at the end of 1st bracket makes it Resizable
# CLOCK = pygame.time.Clock()
# screen_rect = screen.get_rect()

class Window:
    def __init__(self, width, height, fps):
        self.width = width
        self.height = height
        self.fps = fps
        self.screen_size = (self.width, self.height)

    def set_window(self):
        global screen, screen_rect
        screen = pygame.display.set_mode(self.screen_size)
        screen_rect = screen.get_rect()

    def win_return(self):
        return screen, screen_rect

    def set_clock(self):
        clock = pygame.time.Clock()
        return clock


class Background(Window):
    def __init__(self, WIDTH, HEIGHT, FPS):
        # Window.__int__(self, WIDTH, HEIGHT, CLOCK)
        # global WIDTH, HEIGHT, CLOCK
        # super().__init__()
        Window.__init__(self, WIDTH, HEIGHT, FPS)

        self.WIDTH = WIDTH
        self.HEIGHT = HEIGHT
        self.CLOCK = FPS
        self.screen = Window.set_window(self)

    def solid_color(self, red, green, blue):
        self.red = red
        self.green = green
        self.blue = blue
        self.screen.fill((red, green, blue))

    def Image(self, image):
        # try:
        screen, screen_rect = Window.win_return(self)
        self.image = pygame.image.load(image)
        self.image_size = [self.image.get_width(), self.image.get_height()]
        if (self.image_size[0] == self.WIDTH) and (self.image_size[1] == self.HEIGHT):
            self.screen.blit(image, [0, 0])
        elif (self.image_size[0] >= self.WIDTH / 2 and self.image_size[0] <= self.WIDTH) or (
                self.image_size[1] >= self.HEIGHT / 2 and self.image_size[1] <= self.HEIGHT):
            self.new_image = pygame.transform.scale(self.image, self.screen_size)
            screen.blit(self.new_image, [0, 0])
        elif (self.image_size[0] >= WIDTH * 11 / 110 and self.image_size[0] <= WIDTH * 3 / 2) or (
                self.image_size[1] >= HEIGHT * 11 / 110 and self.image_size[1] <= HEIGHT * 3 / 2):
            self.new_image = pygame.transform.scale(self.image, self.screen_size)
            self.screen.blit(self.new_image, [0, 0])
        else:
            print("Invalid Image Size!")
    # except:
    #     raise Exception("Please Enter the File Location!")


class Entity():
    def __init__(self, x, y, vel_x, vel_y, sprite):
        self.x = x
        self.y = y
        self.vel_x = vel_x
        self.vel_y = vel_y
        self.screen2, self.screen_rect2 = Window.win_return(self)
        self.screen_size2 = (self.screen2.get_width(), self.screen2.get_height())

        try:
            self.sprite = sprite
        except:
            raise Exception("Please Enter The Sprite File!")

        self.up = False
        self.down = False
        self.left = False
        self.right = False

    def get_input(self):
        keys = pygame.key.get_pressed()
        if keys[pygame.K_d] or keys[pygame.K_RIGHT]:
            self.left, self.right = False, True
        elif keys[pygame.K_a] or keys[pygame.K_LEFT]:
            self.left, self.right = True, False
        else:
            self.left, self.right = False, False

        if keys[pygame.K_s] or keys[pygame.K_DOWN]:
            self.up, self.down = False, True
        elif keys[pygame.K_w] or keys[pygame.K_UP]:
            self.up, self.down = True, False
        else:
            self.up, self.down = False, False

        return self.left, self.right, self.up, self.down

    def move(self):
        if self.left == True:
            self.x -= self.vel_x
        if self.right == True:
            self.x += self.vel_x

        if self.up == True:
            self.y -= self.vel_y
        if self.down == True:
            self.y += self.vel_y

    def render(self):
        self.bad_img = pygame.image.load(self.sprite)
        self.image_height, self.image_width = 50, 50
        self.sprite_size = (self.image_height, self.image_width)

        self.img = pygame.transform.scale(self.bad_img, self.sprite_size)
        self.screen2.blit(self.img, [self.x, self.y])


'''player = Entity(100, 100, 3, 3, "I_Am_The_One_Who_Codes.jpg")  # x, y, vel_x, vel_y, sprite
background = Background()
while True:
    background.Image("I_Am_The_One_Who_Codes.jpg")
    keys = pygame.key.get_pressed()
    for ev in pygame.event.get():
        if ev.type == QUIT or keys[pygame.K_ESCAPE]:
            pygame.quit()
            sys.exit()

    player.render()

    pygame.display.update()
    clock.tick(60) '''

"""For now , The code is very simple and Tiny
I'll be adding other features in Future """
